package startup;

import config.ClientConfigurationFactory;
import core.Point;
;
import core.Rectangle;
import operations.KNNQuery;
import operations.RangeQuery;
import operationsupport.CacheInfo;
import operationsupport.SetUp;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Map;
import java.util.Scanner;

import org.apache.ignite.Ignite;
import org.apache.ignite.IgniteCache;
import org.apache.ignite.Ignition;

import build.build_GridFile;
import build.build_QuadTree;
import build.build_Rtree;
import operations.GeoSpatial;

/**
 * This file was generated by Ignite Web Console (02/11/2021, 13:17) *
 */


public class ClientNodeCodeStartup {

    /**
     * Start up node with specified configuration.
     *
     * @param args Command line arguments, none required.
     * @throws Exception If failed.
     *
     */

    static String path_worker;
    static String path_out;
    static String knn_path;
    static int typeindex;
    static String pathCache;
    static String pathPoint;
    static double x1, x2, y1, y2;
    static Rectangle spaceMbr;
    static IgniteCache<Integer, File> fcache;
    static IgniteCache<String, Rectangle> ccache;
    static Ignite ignite;
    static int qCount = 0;
    static int i = 0;
    static int key = 0;
    private static Map<String, IgniteCache<Integer, ArrayList<Point>>> cacheMap;

    public static void closeIgnite(Ignite ignite) {
        ignite.destroyCaches(ignite.cacheNames());
        //System.out.println(ignite.cacheNames());
        ignite.close();
    }

    public static void index(String path, String path_out, int typeindex,int c1, int c2) throws IOException {

        if (typeindex == 1) {
            build_QuadTree test = new build_QuadTree();
            test.loadQuadTree(path, path_out , c1, c2);
        }
        if (typeindex == 2) {
            build_GridFile Grid = new build_GridFile();
            Grid.GridFile(path, path_out,c1, c2);
        }
        if (typeindex == 3) {
            build_Rtree r_tree = new build_Rtree();
            r_tree.RTree(path, path_out,c1, c2);

        }
    }

    public static void main(String[] args) throws Exception {
        ignite = Ignition.start(ClientConfigurationFactory.createConfiguration());

        Scanner input = new Scanner(System.in);
        System.out.println("Enter your index number : 1= quad tree, 2= GridFile, 3= Rtree ");
        typeindex = input.nextInt();
        System.out.println("Enter your path data file (.txt) to worker");
        path_worker = input.next();
        //path="C:\\green.txt";
        System.out.println("Please enter a path to save the file");
        path_out = input.next();
        //path_out="D:\\"+typeindex;
        index(path_worker, path_out + path_worker + ".txt", typeindex ,1,2);
        //index(path_worker, path_out + path_worker + ".txt", typeindex ,0,1);
        
        
        CacheInfo cacheInfo = new CacheInfo();
        SetUp.loadFiles(ignite, path_out + path_worker + ".txt", 0, cacheInfo);
        SetUp.createCachesFromFile(ignite, cacheInfo);

        SetUp.loadFiles(ignite, path_worker, 1, cacheInfo);
        SetUp.insert(ignite, cacheInfo, 1,2,11,3);
        //SetUp.insert(ignite, cacheInfo,0,1,8,3);
        
        SetUp.printCahces(ignite, cacheInfo,"D:\\CachesAndSize.txt");


        RangeQuery.rangeQuery(new Rectangle(16.90968448, 30.98333444, 38.02642785, 50.14039901), ignite, path_out + "Range_caches_worker.txt", path_out + "Range_points_worker.txt", cacheInfo);
       
        
        
        
        KNNQuery.knnQuery( new Point(22.65798216,35.57980705),new Rectangle(16.90968448, 30.98333444, 38.02642785, 50.14039901),3, ignite, path_out + "knn.txt", cacheInfo);

        closeIgnite(ignite);

        input.close();
    }

}
